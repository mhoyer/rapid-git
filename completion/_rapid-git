#compdef rapid=rapid-git

# Zsh completion script for rapid-git (https://github.com/rapid-git/rapid-git).

_rapid-git() {
  local curcontext="$curcontext" state state_descr line context ret=1
  typeset -A val_args

  # The first word to complete is a command.
  # Anything after the first word is an argument.
  _arguments -C \
    '1:command:_rapid_git_commands' \
    '*::index:->index' && ret=0

  case "$state" in
    (index)
      _message "Index completion is not supported - use rapid status or rapid branch to get the index you're interested in"
      ret=1
      break

      printf 'curtag: %s\n' $curtag
      printf 'state_descr: %s\n' $state_descr
      printf 'curcontext: %s\n' $curcontext
      printf 'context: %s\n' $context
      printf 'line: %s\n' $line[1]
      printf "val_args: %s\n" $val_args[1]
      ret=1
      ;;
  esac

  return ret
}

(( $+functions[_rapid_git_commands] )) ||
_rapid_git_commands() {
  _alternative 'index:index commands:_rapid_git_index_commands' \
               'branch:branch commands:_rapid_git_branch_commands'
}

(( $+functions[_rapid_git_index_commands] )) ||
_rapid_git_index_commands() {
  local commands

  commands=(
    'diff:Diff file(s)'
    'drop:Drop unstaged changes'
    'remove:Remove file(s)'
    'stage:Stage file(s)'
    'status:Show staged, unstaged, untracked and unmerged files'
    'track:Track file(s)'
    'unstage:Unstage file(s)'
  )

  _describe -t index 'index commands' commands
}

(( $+functions[_rapid_git_branch_commands] )) ||
_rapid_git_branch_commands() {
  local commands

  commands=(
    'branch:Show branches'
    'checkout:Checkout branch'
    'merge:Merge branch'
    'push:Push branch'
    'rebase:Rebase branch'
  )

  _describe -t branch 'branch commands' commands
}

_rapid-git "$@"

# vim: ft=zsh sw=2 ts=2 et
